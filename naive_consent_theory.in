%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Naive consent theory-based machine ethics
%
%
% This file contains a simplistic/naive machine ethics system based on consent theory concepts,
% and implemented in Prover 9's first-order logic dialect.
%
% This is intended as an introduction to the basic concept and proof system, and not as a complete or
% useful system.
%
% Included is a set of test cases to check the system for consistency with known ethical/unethical
% behaviour.
%
% (These are not conclusive/exhaustive tests; they're just to demonstrate how the system works.)
%
%
% NOTE: This file is designed to be run through the (supplied) Python-based test runner called
%
%         'run_as_prover9_test_suite.py' 
%
%       which requires the Prover9 prover:
%
%         http://www.cs.unm.edu/~mccune/mace4/
%
%       to be installed at /usr/bin/prover9 which can be done on Debian/Ubuntu with:
%
%         sudo aptitude install prover9
%
%       The tests in this file may be run using the following command line:
%
%         python run_as_prover9_test_suite.py naive_consent_theory.in
%
%       Individual tests may be run using the following command line:
%
%         python run_as_prover9_test_suite.py naive_consent_theory.in asking_and_getting_consent_is_ethical
%%%

%%%%%%%%%%%%%%%%%%
% Prover 9 set up.
%
% This is shared with all tests.
%%%

% With Prolog style variables set, uppercase symbols (e.g. 'A', 'B', 'X') represent variables;
% lowercase symbols (e.g. 'alex', 'harm') represent constants.
set(prolog_style_variables).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Modelling of consent theory.
%
% This is shared with all tests.
%
%%%

formulas(usable).

% Define ethical actions.
(
 ethical(A, B, X) <->
 (
  (
   ask_for_consent(A, B, X) &             % It is ethical to ask for consent for an action,
   consents(B, A, X) &                    % get consent for that action,
   (
    do(A, B, X) |                         % and then either do,
    (-do(A, B, X))                        % or do not do that action.
   )
  ) |
  (
   ask_for_consent(A, B, X) &             % It is ethical to ask for consent for an action,
   (-consents(B, A, X)) &                 % not get consent for that action,
   (-do(A, B, X))                         % and then not do that action.
  ) |
  (
   (
    do(A, B, X) |                         % It is ethical to do (or not do) an action
    (-do(A, B, X))                        % to yourself.
   ) &
   (A = B)
  )
 )
) # label(ethical_action_definition).

end_of_list.

%%%%%%%%%%%%%%
% Test suite.
%
% Contains known ethical/unethical behaviours, and the decisions the modelling above should make about these
% behaviours.

% Test runner: begin tests.
%
% (This is a directive to the test runner to slice up the following 'Test case:' delineated
%  sections, and runs them separately through Prover 9, storing the resulting output in a results/
%  directory, and collating the results in a JUnit/phpUnit-style display.)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% General consent theory principles.
%
% The names used in these tests (e.g. alex, bo) are intended to be gender-neutral and/or role-appropriate.
%%%

% Test case: asking_and_getting_consent_is_ethical
%
% Asking for consent and getting it is ethical for the person asking.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  consents(bo, alex, action) &
  alex != bo
 ) ->
 ethical(alex, bo, action)
)
# answer(asking_and_getting_consent_is_ethical).

end_of_list.

% Negated test case: asking_and_getting_consent_is_not_unethical
%
% Asking for consent and getting it should not be proven to be unethical for the person asking.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  consents(bo, alex, action) &
  alex != bo
 ) ->
 (-ethical(alex, bo, action))
)
# answer(asking_and_getting_consent_is_not_unethical).

end_of_list.

% Test case: asking_and_not_getting_consent_is_ethical
%
% Asking for consent and not getting it is ethical for the person asking if they then don't act.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  (-consents(bo, alex, action)) &
  (-do(alex, bo, action)) &
  alex != bo
 ) ->
 ethical(alex, bo, action)
)
# answer(asking_and_not_getting_consent_is_ethical).

end_of_list.

% Negated test case: asking_and_not_getting_consent_is_not_unethical
%
% Asking for consent and not getting it should not be proven unethical for the person asking if they then don't act.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  (-consents(bo, alex, action)) &
  (-do(alex, bo, action)) &
  alex != bo
 ) ->
 (-ethical(alex, bo, action))
)
# answer(asking_and_not_getting_consent_is_not_unethical).

end_of_list.

% Test case: ignoring_consent_negative_responses_is_unethical
%
% Ignoring consent-negative responses is unethical.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  (-consents(bo, alex, action)) &
  do(alex, bo, action) &
  alex != bo
 ) ->
 (-ethical(alex, bo, action))
)
# answer(ignoring_consent_negative_responses_is_unethical).

end_of_list.

% Negated test case: ignoring_consent_negative_responses_is_not_ethical
%
% Ignoring consent-negative responses should not be proven to be ethical.

formulas(goals).
(
 (
  ask_for_consent(alex, bo, action) &
  (-consents(bo, alex, action)) &
  do(alex, bo, action) &
  alex != bo
 ) ->
 ethical(alex, bo, action)
)
# answer(ignoring_consent_negative_responses_is_unethical).

end_of_list.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Murder versus euthanasia vs suicide.
%%%

% Test case: killing_without_consent_is_unethical
%
% Murder: killing without consent is unethical.

formulas(goals).
(
 (
  (-ask_for_consent(murderer, victim, kill)) &
  do(murderer, victim, kill) &
  murderer != victim
 ) ->
 (-ethical(murderer, victim, kill))
)
# answer(killing_without_consent_is_unethical).

end_of_list.

% Negated test case: killing_without_consent_is_not_ethical
%
% Murder: killing without consent should not be proven to be ethical.

formulas(goals).
(
 (
  (-ask_for_consent(murderer, victim, kill)) &
  do(murderer, victim, kill) &
  murderer != victim
 ) ->
 ethical(murderer, victim, kill)
)
# answer(killing_without_consent_is_not_ethical).

end_of_list.

% Test case: killing_with_explicit_non_consent_is_unethical
%
% Murder: killing with explicit lack of consent is unethical.

formulas(goals).
(
 (
  (-consents(victim, murderer, kill)) &
  do(murderer, victim, kill) &
  murderer != victim
 ) ->
 (-ethical(murderer, victim, kill))
)
# answer(killing_with_explicit_non_consent_is_unethical).

end_of_list.

% Negated test case: killing_with_explicit_non_consent_is_not_ethical
%
% Murder: killing with explicit lack of consent should not be proven to be ethical.

formulas(goals).
(
 (
  (-consents(victim, murderer, kill)) &
  do(murderer, victim, kill) &
  murderer != victim
 ) ->
 ethical(murderer, victim, kill)
)
# answer(killing_with_explicit_non_consent_is_unethical).

end_of_list.

% Test case: killing_with_explicit_consent_is_ethical
%
% Euthanasia: killing with explicit consent is ethical.

formulas(goals).
(
 (ask_for_consent(doctor, patient, kill) &
  consents(patient, doctor, kill) &
  do(doctor, patient, kill) &
  doctor != patient
 ) ->
 ethical(doctor, patient, kill)
)
# answer(killing_with_explicit_consent_is_ethical).

end_of_list.

% Negated test case: killing_with_explicit_consent_is_not_unethical
%
% Euthanasia: killing with explicit consent should not be proven to be unethical.

formulas(goals).
(
 (ask_for_consent(doctor, patient, kill) &
  consents(patient, doctor, kill) &
  do(doctor, patient, kill) &
  doctor != patient
 ) ->
 (-ethical(doctor, patient, kill))
)
# answer(killing_with_explicit_consent_is_not_unethical).

end_of_list.

% Test case: suicide_without_consent_is_ethical
%
% Suicide: suicide without asking self for consent is ethical.

formulas(goals).
(
 (
  (- ask_for_consent(person, person, kill)) &
  do(person, person, kill)
 ) ->
 ethical(person, person, kill)
)
# answer(suicide_without_consent_is_ethical).

end_of_list.

% Negated test case: suicide_without_consent_is_not_unethical
%
% Suicide: suicide without asking self for consent should not be prove to be unethical.

formulas(goals).
(
 (
  (- ask_for_consent(person, person, kill)) &
  do(person, person, kill)
 ) ->
 (- ethical(person, person, kill))
)
# answer(suicide_without_consent_is_not_unethical).

end_of_list.

% Test case: suicide_with_explicit_non_consent_is_ethical
%
% Suicide: suicide with explicit lack of self-consent is ethical.

formulas(goals).
(
 (
  (- consents(person, person, kill)) &
  do(person, person, kill)
 ) ->
 ethical(person, person, kill)
)
# answer(suicide_with_explicit_non_consent_is_ethical).

end_of_list.

% Negated test case: suicide_with_explicit_non_consent_is_not_unethical
%
% Suicide: killing with explicit lack of self-consent should not be proven to be unethical.

formulas(goals).
(
 (
  (- consents(person, person, kill)) &
  do(person, person, kill)
 ) ->
 (- ethical(person, person, kill))
)
# answer(suicide_with_explicit_non_consent_is_not_unethical).

end_of_list.

% Test case: suicide_with_explicit_consent_is_ethical
%
% Suicide: suicide with own explicit consent is ethical.

formulas(goals).
(
 (ask_for_consent(person, person, kill) &
  consents(person, person, kill) &
  do(person, person, kill)
 ) ->
 ethical(person, person, kill)
)
# answer(suicide_with_explicit_consent_is_ethical).

end_of_list.

% Negated test case: suicide_with_explicit_consent_is_not_unethical
%
% Suicide: suicide with own explicit consent should not be proven to be unethical.

formulas(goals).
(
 (ask_for_consent(person, person, kill) &
  consents(person, person, kill) &
  do(person, person, kill)
 ) ->
 (- ethical(person, person, kill))
)
# answer(suicide_with_explicit_consent_is_not_unethical).

end_of_list.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Assault versus consensual harm. (i.e. medicine, kink.)
%%%

% Test case: harm_without_consent_is_unethical
%
% Assault: harm without consent is unethical.

formulas(goals).
(
 (
  (-ask_for_consent(assailant, victim, harm)) &
  do(assailant, victim, harm) &
  assailant != victim
 ) ->
 (-ethical(assailant, victim, harm))
)
# answer(harm_without_consent_is_unethical).

end_of_list.

% Negated test case: harm_without_consent_is_not_ethical
%
% Assault: harm without consent should not be proven to be ethical.

formulas(goals).
(
 (
  (-ask_for_consent(assailant, victim, harm)) &
  do(assailant, victim, harm) &
  assailant != victim
 ) ->
 ethical(assailant, victim, harm)
)
# answer(harm_without_consent_is_not_ethical).

end_of_list.

% Test case: harm_with_explicit_non_consent_is_unethical
%
% Assault: harm with explicit non-consent is unethical.

formulas(goals).
(
 (
  (-consents(victim, assailant, harm)) &
  do(assailant, victim, harm) &
  assailant != victim
 ) ->
 (-ethical(assailant, victim, harm))
)
# answer(harm_with_explicit_non_consent_is_unethical).

end_of_list.

% Negated test case: harm_with_explicit_non_consent_is_not_ethical
%
% Assault: harm with explicit non-consent should not be proven to be ethical.

formulas(goals).
(
 (
  (-consents(victim, assailant, harm)) &
  do(assailant, victim, harm) &
  assailant != victim
 ) ->
 ethical(assailant, victim, harm)
)
# answer(harm_with_explicit_non_consent_is_not_ethical).

end_of_list.

% Test case: harm_with_explicit_consent_is_ethical
%
% Consensual harm: harm with explicit consent is ethical. (i.e. medicine, kink.)

formulas(goals).
(
 (
  ask_for_consent(assailant, recipient, harm) &
  consents(recipient, assailant, harm) &
  do(assailant, recipient, harm) &
  assailant != recipient
 ) ->
 ethical(assailant, recipient, harm)
)
# answer(harm_with_explicit_consent_is_ethical).

end_of_list.

% Negated test case: harm_with_explicit_consent_is_not_unethical
%
% Consensual harm: harm with explicit consent should not be proven to be unethical.

formulas(goals).
(
 (
  ask_for_consent(assailant, recipient, harm) &
  consents(recipient, assailant, harm) &
  do(assailant, recipient, harm) &
  assailant != recipient
 ) ->
 (-ethical(assailant, recipient, harm))
)
# answer(harm_with_explicit_consent_is_not_unethical).

end_of_list.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Self-directed interactions
%
% Anything you do to yourself is, by default, ethical.
%
% (These may seem nonsensical, but are added for consistency purposes.)
%%%

% Test case: asking_and_getting_own_consent_is_ethical
%
% Asking yourself for consent and getting it is ethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  consents(alex, alex, action)
 ) ->
 ethical(alex, alex, action)
)
# answer(asking_and_getting_own_consent_is_ethical).

end_of_list.

% Negated test case: asking_and_getting_own_consent_is_not_unethical
%
% Asking yourself for consent and getting it should not be proven to be unethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  consents(alex, alex, action)
 ) ->
 (-ethical(alex, alex, action))
)
# answer(asking_and_getting_own_consent_is_not_unethical).

end_of_list.

% Test case: asking_and_not_getting_own_consent_is_ethical
%
% Asking yourself for consent and not getting it is ethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  (-consents(alex, alex, action)) &
  (-do(alex, alex, action))
 ) ->
 ethical(alex, alex, action)
)
# answer(asking_and_not_getting_own_consent_is_ethical).

end_of_list.

% Negated test case: asking_and_not_getting_own_consent_is_not_unethical
%
% Asking yourself for consent and not getting it should not be proven unethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  (-consents(alex, alex, action)) &
  (-do(alex, alex, action))
 ) ->
 (-ethical(alex, alex, action))
)
# answer(asking_and_not_getting_own_consent_is_not_unethical).

end_of_list.

% Test case: ignoring_own_consent_negative_responses_is_ethical
%
% Ignoring your own consent-negative responses is ethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  (-consents(alex, alex, action)) &
  do(alex, alex, action)
 ) ->
 ethical(alex, alex, action)
)
# answer(ignoring_own_consent_negative_responses_is_ethical).

end_of_list.

% Negated test case: ignoring_own_consent_negative_responses_is_not_unethical
%
% Ignoring consent-negative responses should not be proven to be ethical.

formulas(goals).
(
 (
  ask_for_consent(alex, alex, action) &
  (-consents(alex, alex, action)) &
  do(alex, alex, action)
 ) ->
 (-ethical(alex, alex, action))
)
# answer(ignoring_own_consent_negative_responses_is_not_unethical).

end_of_list.

%
% Test runner: end tests.
%